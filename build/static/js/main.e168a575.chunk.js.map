{"version":3,"sources":["components/UI/Button/Button.js","components/UI/Input/Input.js","components/UI/Select/Select.js","services/errorHandler.js","helper/getUrl.js","services/httpClient.js","services/loanCalculator/index.js","store/actions/loanCalculator.js","components/Calculator/Calculator.js","components/MonthlyRate/MonthlyRate.js","components/UI/Spinner/Spinner.js","pages/LoanCalculator/LoanCalculator.js","App.js","serviceWorker.js","store/reducers/loanCalculator.js","store/reducers/index.js","index.js"],"names":["button","disabled","children","data-testid","type","className","input","label","name","infoMsg","errors","rest","autoComplete","Select","optionsData","defaultOption","options","map","value","key","errorHandler","error","response","request","getUrl","resource","httpClient","config","instance","axios","create","headers","common","Accept","post","put","patch","postLoanCalculator","payload","a","calculateInstallment","formValues","dispatch","calculateInstallmentRequest","loanCalculator","res","calculateInstallmentSuccess","data","calculateInstallmentFailure","Calculator","useState","amount","setAmount","duration","setDuration","useDispatch","handleSubmit","event","preventDefault","loanCalculatorActions","yearOptions","Array","item","index","onSubmit","customInput","Input","thousandSeparator","decimalSeparator","onBlur","onValueChange","onChange","e","target","MonthlyRate","monthlyRate","spinner","LoanCalculator","useSelector","state","installment","loading","App","Boolean","window","location","hostname","match","initialState","combineReducers","action","monthlyInstallment","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"gdAceA,G,MAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACb,4BACEC,cAAY,gBACZC,KAAK,SACLC,UAAU,SACVJ,SAAUA,GAETC,M,QCQUI,G,MAfD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAcC,GAAxB,EAAgBC,OAAhB,EAAwBD,SAAYE,EAApC,0DACZ,yBAAKN,UAAU,SACb,2BAAOA,UAAU,SAASE,GAC1B,yBAAKF,UAAU,WACb,yCACEG,KAAMA,EACNI,aAAa,MACbP,UAAU,iBACNM,IAEN,2BAAIF,QCYKI,G,MAtBA,SAAC,GAAoD,IAAlDN,EAAiD,EAAjDA,MAAOO,EAA0C,EAA1CA,YAAaN,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAAYE,EAAW,wDAC3DI,EAAgBD,EAAY,GAC9BE,EAAUF,EAAYG,KAAI,YAAuB,IAApBC,EAAmB,EAAnBA,MAAOX,EAAY,EAAZA,MACtC,OACE,4BAAQY,IAAKD,EAAOA,MAAOA,GACxBX,OAIP,OACE,yBAAKF,UAAU,SACb,2BAAOA,UAAU,SAASE,EAA1B,KACA,yBAAKF,UAAU,kBACb,0CAAQA,UAAU,SAASG,KAAMA,EAAMU,MAAOH,GAAmBJ,GAC9DK,GAEH,2BAAIP,O,OCTGW,EAVM,SAACC,GACpB,OAAIA,EAAMC,SACD,+CACED,EAAME,QACR,+CAEA,uCCNEC,EAAS,SAACC,GAGrB,MAAM,GAAN,OAFgB,kDAEhB,YAAqBA,I,iBCgBRC,EAjBI,SAACC,GAYlB,MAAO,CACLC,SAXeC,IAAMC,OAAN,aACfC,QAAS,CACPC,OAAQ,CAAEC,OAHS,oBAInBC,KAAM,CAAE,eAJW,oBAKnBC,IAAK,CAAE,eALY,oBAMnBC,MAAO,CAAE,eANU,sBAQlBT,MCFQ,GAAEU,mBANO,uCAAG,WAAOZ,EAAUa,GAAjB,iBAAAC,EAAA,+DACJb,IAAbE,EADiB,EACjBA,SADiB,SAGZA,EAASM,KAAKV,EAAOC,GAAWa,GAHpB,mFAAH,yDCIXE,EAAuB,SAACC,GAAD,8CAAgB,WAAOC,GAAP,eAAAH,EAAA,6DAClDG,EAASC,KADyC,kBAI9BC,EAAeP,mBAC/B,iBACAI,GAN8C,OAI1CI,EAJ0C,OAQhDH,EAASI,EAA4BD,EAAIE,OARO,gDAUhDL,EAASM,EAA4B5B,EAAa,EAAD,MAVD,yDAAhB,uDAcvB0B,EAA8B,SAACC,GAAD,MAAW,CACpD3C,KAlB2C,gCAmB3CkC,QAAQ,eACHS,KAIMJ,EAA8B,iBAAO,CAChDvC,KA1B2C,kCA6BhC4C,EAA8B,SAAC3B,GAAD,MAAY,CACrDjB,KA5B2C,gCA6B3CkC,QAAS,CACPjB,WCkCW4B,G,MA5DI,WAAO,IAAD,EACKC,mBAAS,KADd,mBAChBC,EADgB,KACRC,EADQ,OAESF,mBAAS,GAFlB,mBAEhBG,EAFgB,KAENC,EAFM,KAIjBZ,EAAWa,cAEXC,EAAY,uCAAG,WAAOC,GAAP,SAAAlB,EAAA,sDACnBkB,EAAMC,iBACNhB,EAASiB,EAA2C,CAAER,SAAQE,cAF3C,2CAAH,sDAiBZO,EAAc,YAAIC,MAAM,IAAI5C,KAAI,SAAC6C,EAAMC,GAAP,MAAkB,CACtD7C,MAAO6C,EAAQ,EACfxD,MAAM,GAAD,OAAKwD,EAAQ,EAAb,cAGP,OACE,oCACE,0BAAMC,SAAUR,GACd,yBAAKnD,UAAU,kBACb,kBAAC,IAAD,CACE4D,YAAaC,EACbC,kBAAkB,IAClBC,iBAAiB,IACjB5D,KAAK,SACLD,MAAM,SACN8D,OA3BgB,WACpBlB,EAAS,IACXC,EAAU,KACDD,EAAS,KAClBC,EAAU,MAwBJlC,MAAOiC,EACP1C,QAAQ,uBACR6D,cAAe,YAAgB,IAAbpD,EAAY,EAAZA,MAChBkC,EAAUlC,MAGd,kBAAC,EAAD,CACEV,KAAK,WACLD,MAAM,WACNO,YAAa8C,EACbW,SA9BoB,SAACC,GAC7BlB,EAAYkB,EAAEC,OAAOvD,QA8BbA,MAAOmC,EACP5C,QAAQ,gBAEV,kBAAC,EAAD,CAAQR,UAAU,GAAlB,WCtCKyE,G,MArBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAatD,EAAY,EAAZA,MAClC,OAAIA,EACK,uBAAGhB,UAAU,aAAagB,GAIjC,oCACGsD,EACC,oCACE,0BAAMtE,UAAU,sBAAhB,yBACA,0BAAMA,UAAU,sBAAhB,UAAyCsE,EAAzC,UAGF,uBAAGxE,cAAY,YAAf,6DCROyE,G,MAJC,kBACZ,yBAAKvE,UAAU,UAAf,gBCqBWwE,G,MAnBQ,WAAO,IAAD,EACaC,aACtC,SAACC,GAAD,OAAWA,EAAMnC,kBADXoC,EADmB,EACnBA,YAAaC,EADM,EACNA,QAAS5D,EADH,EACGA,MAI9B,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKhB,UAAU,gBACZ4E,EACC,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAaN,YAAaK,EAAa3D,MAAOA,SCNzC6D,MATf,WACE,OACE,yBAAK7E,UAAU,OACb,+CACA,kBAAC,EAAD,Q,MCIc8E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZC,IAAMC,EAAe,CAC1BP,SAAS,EACTD,YAAa,EACb3D,MAAO,MCNMoE,kBAAgB,CAC7B7C,eDQa,WAAuD,IAA/BmC,EAA8B,uDAAtBS,EAAcE,EAAQ,uCACnE,OAAQA,EAAOtF,MACb,IPXyC,gCOYvC,OAAO,eACF2E,EADL,CAEEE,SAAS,IAEb,IPfyC,gCOgBvC,MAAO,CACLA,SAAS,EACT5D,MAAO,KACP2D,YAAaU,EAAOpD,QAAQqD,oBAEhC,IPpByC,gCOqBvC,OAAO,eACFZ,EADL,CAEEE,SAAS,EACT5D,MAAOqE,EAAOpD,QAAQjB,QAE1B,QACE,OAAO0D,MEtBPa,EAAQC,YAAYC,EAAaC,YAAgBC,MAEvDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SHiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvF,GACLwF,QAAQxF,MAAMA,EAAMyF,c","file":"static/js/main.e168a575.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Button.css\";\n\nconst button = ({ disabled, children }) => (\n  <button\n    data-testid=\"button-submit\"\n    type=\"submit\"\n    className=\"button\"\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n\nexport default button;\n","import React from \"react\";\nimport \"./Input.css\";\n\nconst input = ({ label, name, errors, infoMsg, ...rest }) => (\n  <div className=\"field\">\n    <label className=\"label\">{label}</label>\n    <div className=\"control\">\n      <input\n        name={name}\n        autoComplete=\"off\"\n        className=\"input-element\"\n        {...rest}\n      />\n      <p>{infoMsg}</p>\n    </div>\n  </div>\n);\n\nexport default input;\n","import React from \"react\";\nimport \"./Select.css\";\n\nconst Select = ({ label, optionsData, name, infoMsg, ...rest }) => {\n  const defaultOption = optionsData[0];\n  let options = optionsData.map(({ value, label }) => {\n    return (\n      <option key={value} value={value}>\n        {label}\n      </option>\n    );\n  });\n  return (\n    <div className=\"field\">\n      <label className=\"label\">{label} </label>\n      <div className=\"control-select\">\n        <select className=\"select\" name={name} value={defaultOption} {...rest}>\n          {options}\n        </select>\n        <p>{infoMsg}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Select;\n","const errorHandler = (error) => {\n  if (error.response) {\n    return \"Something wrong with the response, Try agin!\";\n  } else if (error.request) {\n    return \"Something wrong with your request, Try agin!\";\n  } else {\n    return \"Error while processing your request\";\n  }\n};\n\nexport default errorHandler;\n","export const getUrl = (resource) => {\n  const baseURL = \"https://5e900510fe7f2a00165ef778.mockapi.io/api\";\n\n  return `${baseURL}/${resource}`;\n};\n","import axios from \"axios\";\n\nconst httpClient = (config) => {\n  const JSON_MIME_TYPE = \"application/json\";\n  const instance = axios.create({\n    headers: {\n      common: { Accept: JSON_MIME_TYPE },\n      post: { \"Content-Type\": JSON_MIME_TYPE },\n      put: { \"Content-Type\": JSON_MIME_TYPE },\n      patch: { \"Content-Type\": JSON_MIME_TYPE },\n    },\n    ...config,\n  });\n\n  return {\n    instance,\n  };\n};\n\nexport default httpClient;\n","import { getUrl } from \"../../helper/getUrl\";\nimport httpClient from \"../httpClient\";\n\nconst postLoanCalculator = async (resource, payload) => {\n  const { instance } = httpClient();\n\n  return await instance.post(getUrl(resource), payload);\n};\n\nexport default { postLoanCalculator };\n","import errorHandler from \"../../services/errorHandler\";\nimport loanCalculator from \"../../services/loanCalculator\";\n\nexport const CALCULATE_INSTALLMENT_REQUEST = \"CALCULATE_INSTALLMENT_REQUEST\";\nexport const CALCULATE_INSTALLMENT_SUCCESS = \"CALCULATE_INSTALLMENT_SUCCESS\";\nexport const CALCULATE_INSTALLMENT_FAILURE = \"CALCULATE_INSTALLMENT_FAILURE\";\n\nexport const calculateInstallment = (formValues) => async (dispatch) => {\n  dispatch(calculateInstallmentRequest());\n\n  try {\n    const res = await loanCalculator.postLoanCalculator(\n      \"loanCalculator\",\n      formValues\n    );\n    dispatch(calculateInstallmentSuccess(res.data));\n  } catch (error) {\n    dispatch(calculateInstallmentFailure(errorHandler(error)));\n  }\n};\n\nexport const calculateInstallmentSuccess = (data) => ({\n  type: CALCULATE_INSTALLMENT_SUCCESS,\n  payload: {\n    ...data,\n  },\n});\n\nexport const calculateInstallmentRequest = () => ({\n  type: CALCULATE_INSTALLMENT_REQUEST,\n});\n\nexport const calculateInstallmentFailure = (error) => ({\n  type: CALCULATE_INSTALLMENT_FAILURE,\n  payload: {\n    error,\n  },\n});\n","import React, { useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Select from \"../../components/UI/Select/Select\";\nimport * as loanCalculatorActions from \"../../store/actions/loanCalculator\";\nimport \"./Calculator.css\";\n\nconst Calculator = () => {\n  const [amount, setAmount] = useState(10000);\n  const [duration, setDuration] = useState(1);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    dispatch(loanCalculatorActions.calculateInstallment({ amount, duration }));\n  };\n\n  const amountBlurHandler = () => {\n    if (amount < 10000) {\n      setAmount(10000);\n    } else if (amount > 100000) {\n      setAmount(100000);\n    }\n  };\n\n  const durationChangeHandler = (e) => {\n    setDuration(e.target.value);\n  };\n\n  const yearOptions = [...Array(5)].map((item, index) => ({\n    value: index + 1,\n    label: `${index + 1} Jahre`,\n  }));\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"fields-wrapper\">\n          <NumberFormat\n            customInput={Input}\n            thousandSeparator=\".\"\n            decimalSeparator=\",\"\n            name=\"amount\"\n            label=\"Amount\"\n            onBlur={amountBlurHandler}\n            value={amount}\n            infoMsg=\"EUR 10.000 - 100.000\"\n            onValueChange={({ value }) => {\n              setAmount(value);\n            }}\n          />\n          <Select\n            name=\"duration\"\n            label=\"Duration\"\n            optionsData={yearOptions}\n            onChange={durationChangeHandler}\n            value={duration}\n            infoMsg=\"1 - 5 Jahre\"\n          />\n          <Button disabled={false}>OK</Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default Calculator;\n","import React from \"react\";\nimport \"./MonthlyRate.css\";\n\nconst MonthlyRate = ({ monthlyRate, error }) => {\n  if (error) {\n    return <p className=\"error-msg\">{error}</p>;\n  }\n\n  return (\n    <>\n      {monthlyRate ? (\n        <>\n          <span className=\"monthly-rate-label\">Monthly Installment :</span>\n          <span className=\"monthly-rate-value\">{`${monthlyRate} EUR`}</span>\n        </>\n      ) : (\n        <p data-testid=\"infoText\">\n          Enter Amount and duration to calculate the installment\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default MonthlyRate;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className=\"loader\">Loading...</div>\n);\n\nexport default spinner;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Calculator from \"../../components/Calculator/Calculator\";\nimport MonthlyRate from \"../../components/MonthlyRate/MonthlyRate\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport \"./LoanCalculator.css\";\n\nconst LoanCalculator = () => {\n  const { installment, loading, error } = useSelector(\n    (state) => state.loanCalculator\n  );\n\n  return (\n    <>\n      <Calculator />\n      <div className=\"monthly-rate\">\n        {loading ? (\n          <Spinner />\n        ) : (\n          <MonthlyRate monthlyRate={installment} error={error} />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default LoanCalculator;\n","import React from \"react\";\nimport \"./App.css\";\nimport LoanCalculator from \"./pages/LoanCalculator/LoanCalculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Loan calculator</h1>\n      <LoanCalculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  CALCULATE_INSTALLMENT_FAILURE,\n  CALCULATE_INSTALLMENT_REQUEST,\n  CALCULATE_INSTALLMENT_SUCCESS,\n} from \"../actions/loanCalculator\";\n\nexport const initialState = {\n  loading: false,\n  installment: 0,\n  error: null,\n};\n\nexport default function loanCalculator(state = initialState, action) {\n  switch (action.type) {\n    case CALCULATE_INSTALLMENT_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CALCULATE_INSTALLMENT_SUCCESS:\n      return {\n        loading: false,\n        error: null,\n        installment: action.payload.monthlyInstallment,\n      };\n    case CALCULATE_INSTALLMENT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport loanCalculator from \"./loanCalculator\";\n\nexport default combineReducers({\n  loanCalculator,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./store/reducers/\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}